{
	"Default Discord bot main.py file": {
		"prefix": "dpy.main",
		"body": [
			"import discord",
            "from discord.ext import commands",
            "import json",
            "",
            "# Get configuration.json",
            "with open(\"configuration.json\", \"r\") as config:", 
            "\tdata = json.load(config)",
            "\ttoken = data[\"token\"]",
            "\tprefix = data[\"prefix\"]",
            "",
            "",
            "class Greetings(commands.Cog):",
            "\tdef __init__(self, bot):",
            "\t\tself.bot = bot",
            "\t\tself._last_member = None",
            "",
            "# Intents",
            "intents = discord.Intents.default()",
            "intents.members = True",
            "",
            "bot = commands.Bot(prefix, intents = intents)",
            "",
            "# Load cogs",
            "initial_extensions = [",
            "\t\"Cogs.help\",",
            "\t\"Cogs.ping\"",
            "]",
            "",
            "print(initial_extensions)",
            "",
            "if __name__ == '__main__':",
            "\tfor extension in initial_extensions:",
            "\t\ttry:",
            "\t\t\tbot.load_extension(extension)",
            "\t\texcept Exception as e:",
            "\t\t\tprint(f\"Failed to load extension {extension}\")",
            "",
            "@bot.event",
            "async def on_ready():",
            "\tprint(f\"We have logged in as {bot.user}\")",
            "\tawait bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name =f\"{bot.command_prefix}help\"))",
            "\tprint(discord.__version__)",
            "",
            "bot.run(token)"
		],
        "description": "Create a basic Discord bot main.py file."
    },

    "Default Discord bot cog": {
		"prefix": "dpy.cog",
		"body": [
			"import discord",
            "from discord.ext import commands",
            "",
            "",
            "class ${1:TemplateCog}(commands.Cog):",
            "\tdef __init__(self, bot):",
            "\t\tself.bot = bot",
            "",    
            "",        
            "\t@commands.command(name = \"${2:commandName}\",",
            "\t\t\t\t\tusage=\"${3:<usage>}\",",
            "\t\t\t\t\tdescription = \"${4:description}\")",
            "\t@commands.guild_only()",
            "\t@commands.has_permissions()",
            "\t@commands.cooldown(1, ${5:2}, commands.BucketType.member)",
            "\tasync def ping(self, ctx):",
            "\t\t${6:await ctx.send(\"template command\")}",
            "",        
            "",
            "def setup(bot):",
            "\tbot.add_cog(${7:TemplateCog}(bot))"
		],
        "description": "Create a basic Discord cog."
    },

    "Default Discord bot command": {
		"prefix": "dpy.cmd",
		"body": [       
            "@commands.command(name = \"${1:commandName}\", aliases=[\"${2:aliase}\"])",
            "async def command(self, ctx):",
            "\t${3:await ctx.send(\"template command\")}"
		],
        "description": "Create a basic Discord command."
    },

    "Complex Discord bot command": {
		"prefix": "dpy.cmd+",
		"body": [       
            "@commands.command(name = \"${1:commandName}\",",
            "\t\t\t\taliases=[\"${2:aliase}\"]]",
            "\t\t\t\tusage=\"${3:<usage>}\",",
            "\t\t\t\tdescription = \"${4:description}\")",
            "@commands.guild_only()",
            "@commands.has_permissions()",
            "@commands.cooldown(1, ${5:2}, commands.BucketType.member)",
            "async def command(self, ctx):",
            "\t${6:await ctx.send(\"template command\")}"
		],
        "description": "Create a complex Discord command."
    },

    "Default Discord bot embed": {
		"prefix": "dpy.embed",
		"body": [       
            "embed=discord.Embed(title=\"title\", description=\"description\", color=0xff0000)",
            "embed.add_field(name=\"field\", value=\"value\", inline=False)",
            "await ctx.send(embed=embed)"
		],
        "description": "Create a basic Discord embed."
    },

    "Complex Discord bot embed": {
		"prefix": "dpy.embed+",
		"body": [       
            "embed=discord.Embed(title=\"title\", description=\"description\", color=0xff0000)",
            "embed.set_author(name=\"\", url=\"url\", icon_url=\"icon\")",
            "embed.set_thumbnail(url=\"thumbnail\")",
            "embed.add_field(name=\"field\", value=\"value\", inline=False)",
            "embed.set_footer(text=\"footer\")",
            "await ctx.send(embed=embed)"
		],
        "description": "Create a complex Discord embed."
    },

    "Default Discord bot on_connect": {
		"prefix": "dpy.onConnect",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_connect(self):"
		],
        "description": "Create a default Discord bot on_connect."
    },

    "Default Discord bot on_disconnect": {
		"prefix": "dpy.onDisconnect",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_disconnect(self):"
		],
        "description": "Create a default Discord bot on_disconnect."
    },

    "Default Discord bot on_shard_connect": {
		"prefix": "dpy.onShardConnect",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_shard_connect(self, shard_id):"
		],
        "description": "Create a default Discord bot on_shard_connect."
    },

    "Default Discord bot on_shard_disconnect": {
		"prefix": "dpy.onShardDisconnect",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_shard_disconnect(self, shard_id):"
		],
        "description": "Create a default Discord bot on_shard_disconnect."
    },

    "Default Discord bot on_ready": {
		"prefix": "dpy.onReady",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_ready(self, message):"
		],
        "description": "Create a default Discord bot on_ready."
    },

    "Default Discord bot on_shard_ready": {
		"prefix": "dpy.onShardReady",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_shard_ready(self, shard_id):"
		],
        "description": "Create a default Discord bot on_shard_ready."
    },

    "Default Discord bot on_resumed": {
		"prefix": "dpy.onResumed",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_resumed(self, member):"
		],
        "description": "Create a default Discord bot on_resumed."
    },

    "Default Discord bot on_shard_resumed": {
		"prefix": "dpy.onShardResumed",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_shard_resumed(self, shard_id):"
		],
        "description": "Create a default Discord bot on_shard_resumed."
    },

    "Default Discord bot on_error": {
		"prefix": "dpy.onError",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_error(self, event, *args, **kwargs):"
		],
        "description": "Create a default Discord bot on_error."
    },

    "Default Discord bot on_socket_raw_receive": {
		"prefix": "dpy.onSocketRawReceive",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_socket_raw_receive(self, msg):"
		],
        "description": "Create a default Discord bot on_socket_raw_receive."
    },

    "Default Discord bot on_socket_raw_send": {
		"prefix": "dpy.onSocketRawSend",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_socket_raw_send(self, payload):"
		],
        "description": "Create a default Discord bot on_socket_raw_send."
    },

    "Default Discord bot on_typing": {
		"prefix": "dpy.onTyping",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_typing(self, channel, user, when):"
		],
        "description": "Create a default Discord bot on_typing."
    },

    "Default Discord bot on_message": {
		"prefix": "dpy.onMessage",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_message(self, message):"
		],
        "description": "Create a default Discord bot on_message."
    },

    "Default Discord bot on_message_delete": {
		"prefix": "dpy.onMessageDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_message_delete(self, message):"
		],
        "description": "Create a default Discord bot on_message_delete."
    },

    "Default Discord bot on_bulk_message_delete": {
		"prefix": "dpy.onBulkMessageDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_bulk_message_delete(self, messages):"
		],
        "description": "Create a default Discord bot on_bulk_message_delete."
    },

    "Default Discord bot on_raw_bulk_message_delete": {
		"prefix": "dpy.onRawBulkMessageDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_bulk_message_delete(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_bulk_message_delete."
    },

    "Default Discord bot on_raw_message_delete": {
		"prefix": "dpy.onRawMessageDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_message_delete(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_message_delete."
    },

    "Default Discord bot on_message_edit": {
		"prefix": "dpy.onMessageEdit",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_message_edit(self, before, after):"
		],
        "description": "Create a default Discord bot on_message_edit."
    },

    "Default Discord bot on_raw_message_edit": {
		"prefix": "dpy.onRawMessageEdit",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_message_edit(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_message_edit."
    },

    "Default Discord bot on_reaction_add": {
		"prefix": "dpy.onReactionAdd",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_reaction_add(self, reaction, user):"
		],
        "description": "Create a default Discord bot on_reaction_add."
    },

    "Default Discord bot on_raw_reaction_add": {
		"prefix": "dpy.onRawReactionAdd",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_reaction_add(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_reaction_add."
    },

    "Default Discord bot on_reaction_remove": {
		"prefix": "dpy.onReactionRemove",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_reaction_remove(self, reaction, user):"
		],
        "description": "Create a default Discord bot on_reaction_remove."
    },

    "Default Discord bot on_raw_reaction_remove": {
		"prefix": "dpy.onRawReactionRemove",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_reaction_remove(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_reaction_remove."
    },

    "Default Discord bot on_reaction_clear": {
		"prefix": "dpy.onReactionClear",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_reaction_clear(self, message, reactions):"
		],
        "description": "Create a default Discord bot on_reaction_clear."
    },

    "Default Discord bot on_raw_reaction_clear": {
		"prefix": "dpy.onRawReactionClear",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_reaction_clear(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_reaction_clear."
    },

    "Default Discord bot on_reaction_clear_emoji": {
		"prefix": "dpy.onReactionClearEmoji",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_reaction_clear_emoji(self, reaction):"
		],
        "description": "Create a default Discord bot on_reaction_clear_emoji."
    },

    "Default Discord bot on_raw_reaction_clear_emoji": {
		"prefix": "dpy.onRawReactionClearEmoji",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_raw_reaction_clear_emoji(self, payload):"
		],
        "description": "Create a default Discord bot on_raw_reaction_clear_emoji."
    },

    "Default Discord bot on_private_channel_delete": {
		"prefix": "dpy.onPrivateChannelDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_private_channel_delete(self, channel):"
		],
        "description": "Create a default Discord bot on_private_channel_delete."
    },

    "Default Discord bot on_private_channel_create": {
		"prefix": "dpy.onPrivateChannelCreate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_private_channel_create(self, channel):"
		],
        "description": "Create a default Discord bot on_private_channel_create."
    },

    "Default Discord bot on_private_channel_update": {
		"prefix": "dpy.onPrivateChannelUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_private_channel_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_private_channel_update."
    },

    "Default Discord bot on_private_channel_pins_update": {
		"prefix": "dpy.onPrivateChannelPinsUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_private_channel_pins_update(self, channel, last_pin):"
		],
        "description": "Create a default Discord bot on_private_channel_pins_update."
    },

    "Default Discord bot on_guild_channel_delete": {
		"prefix": "dpy.onGuildChannelDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_channel_delete(self, channel):"
		],
        "description": "Create a default Discord bot on_guild_channel_delete."
    },

    "Default Discord bot on_guild_channel_create": {
		"prefix": "dpy.onGuildChannelCreate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_channel_create(self, channel):"
		],
        "description": "Create a default Discord bot on_guild_channel_create."
    },

    "Default Discord bot on_guild_channel_update": {
		"prefix": "dpy.onGuildChannelUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_channel_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_guild_channel_update."
    },

    "Default Discord bot on_guild_channel_pins_update": {
		"prefix": "dpy.onGuildChannelPinsUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_channel_pins_update(self, channel, last_pin):"
		],
        "description": "Create a default Discord bot on_guild_channel_pins_update."
    },

    "Default Discord bot on_guild_integrations_update": {
		"prefix": "dpy.onGuildIntegrationsUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_integrations_update(self, guild):"
		],
        "description": "Create a default Discord bot on_guild_integrations_update."
    },

    "Default Discord bot on_webhooks_update": {
		"prefix": "dpy.onWebhooksUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_webhooks_update(self, channel):"
		],
        "description": "Create a default Discord bot on_webhooks_update."
    },

    "Default Discord bot on_member_join": {
		"prefix": "dpy.onMemberJoin",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_member_join(self, member):"
		],
        "description": "Create a default Discord bot on_member_join."
    },

    "Default Discord bot on_member_remove": {
		"prefix": "dpy.onMemberRemove",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_member_remove(self, member):"
		],
        "description": "Create a default Discord bot on_member_remove."
    },

    "Default Discord bot on_member_update": {
		"prefix": "dpy.onMemberUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_member_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_member_update."
    },

    "Default Discord bot on_user_update": {
		"prefix": "dpy.onUserUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_user_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_user_update."
    },

    "Default Discord bot on_guild_join": {
		"prefix": "dpy.onGuildJoin",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_join(self, guild):"
		],
        "description": "Create a default Discord bot on_guild_join."
    },

    "Default Discord bot on_guild_remove": {
		"prefix": "dpy.onGuildRemove",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_remove(self, guild):"
		],
        "description": "Create a default Discord bot on_guild_remove."
    },

    "Default Discord bot on_guild_update": {
		"prefix": "dpy.onGuildUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_guild_update."
    },

    "Default Discord bot on_guild_role_create": {
		"prefix": "dpy.onGuildRoleCreate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_role_create(self, role):"
		],
        "description": "Create a default Discord bot on_guild_role_create."
    },

    "Default Discord bot on_guild_role_delete": {
		"prefix": "dpy.onGuildRoleDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_role_delete(self, role):"
		],
        "description": "Create a default Discord bot on_guild_role_delete."
    },

    "Default Discord bot on_guild_role_update": {
		"prefix": "dpy.onGuildRoleUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_role_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_guild_role_update."
    },

    "Default Discord bot on_guild_emojis_update": {
		"prefix": "dpy.onGuildEmojisUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_emojis_update(self, guild, before, after):"
		],
        "description": "Create a default Discord bot on_guild_emojis_update."
    },

    "Default Discord bot on_guild_available": {
		"prefix": "dpy.onGuildAvailable",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_available(self, guild):"
		],
        "description": "Create a default Discord bot on_guild_available."
    },

    "Default Discord bot on_guild_unavailable": {
		"prefix": "dpy.onGuildUnavailable",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_guild_unavailable(self, guild):"
		],
        "description": "Create a default Discord bot on_guild_unavailable."
    },

    "Default Discord bot on_voice_state_update": {
		"prefix": "dpy.onVoiceStateUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_voice_state_update(self, member, before, after):"
		],
        "description": "Create a default Discord bot on_voice_state_update."
    },

    "Default Discord bot on_member_ban": {
		"prefix": "dpy.onMemberBan",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_member_ban(self, guild, user):"
		],
        "description": "Create a default Discord bot on_member_ban."
    },

    "Default Discord bot on_member_unban": {
		"prefix": "dpy.onMemberUnban",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_member_unban(self, guild, user):"
		],
        "description": "Create a default Discord bot on_member_unban."
    },

    "Default Discord bot on_invite_create": {
		"prefix": "dpy.onInviteCreate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_invite_create(self, invite):"
		],
        "description": "Create a default Discord bot on_invite_create."
    },

    "Default Discord bot on_invite_delete": {
		"prefix": "dpy.onInviteDelete",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_invite_delete(self, invite):"
		],
        "description": "Create a default Discord bot on_invite_delete."
    },

    "Default Discord bot on_group_join": {
		"prefix": "dpy.onGroupJoin",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_group_join(self, channel, user):"
		],
        "description": "Create a default Discord bot on_group_join."
    },
    
    "Default Discord bot on_group_remove": {
		"prefix": "dpy.onGroupRemove",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_group_remove(self, channel, user):"
		],
        "description": "Create a default Discord bot on_group_remove."
    },

    "Default Discord bot on_relationship_add": {
		"prefix": "dpy.onRelationshipAdd",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_relationship_add(self, relationship):"
		],
        "description": "Create a default Discord bot on_relationship_add."
    },

    "Default Discord bot on_relationship_remove": {
		"prefix": "dpy.onRelationshipRemove",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_relationship_remove(self, relationship):"
		],
        "description": "Create a default Discord bot on_relationship_remove."
    },

    "Default Discord bot on_relationship_update": {
		"prefix": "dpy.onRelationshipUpdate",
		"body": [       
            "@commands.Cog.listener()",
            "async def on_relationship_update(self, before, after):"
		],
        "description": "Create a default Discord bot on_relationship_update."
    },

}